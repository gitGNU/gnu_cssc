This is the README file for GNU CSSC, a workalike for the source code
control system SCCS.  It is based on the MySC package by Ross Ridge.

CSSC is currently under development so expect problems with compiling
the package on older machines and perhaps even incorrect operation.



STOP PRESS!

         CSSC is now hosted on SourceForge, and so a bug reporting and
         technical support system is available on
         http://sourceforge.net/CSSC.



==============================================================================
			Quick Start
------------------------------------------------------------------------------
1.	Compiling

 The default installation directory for the binaries is 
 /usr/local/libexec/cssc, except for the sccs comand, which gets
 installed in /usr/local/bin.  

 If you want to change this, you will need to read the file INSTALL.

 If, for example, you want to install the files in /usr/libexec/cssc
 and so on rather than in /usr/local/..., you just need to pass the 
 argument "prefix=/usr" to make.    

 If, on the other hand, all you wanted to do was to install the binaries
 in a normal binary directory, you can do this with the argument
 "csscutildir=/usr/local/bin" to make. 

 The program "sccs" (from the subdirectory bsd) is sensitive to the
 setting of $(csscutildir) at compile time, because it compiles in the
 calue of that option as the default place to find the various
 subprograms.

 mkdir work
 cd work
 ../configure
 make

2.	Testing 

 The tests can be run with "make check".   This short script runs the
 test suite, and reports any problems to me:-

 if make check 2>&1 | tee make.log 
 then
	(uname -a ; ./admin -V) | mail -s "CSSC success" jay@gnu.org
 else
	echo FAILED, please send full details to 'jay@gnu.org.'
	(uname -a ; cat make.log) | mail -s "CSSC failure" jay@gnu.org 
 fi


 If the tests failed, I'll definitely need some more information and
 so it would be best to keep the test outputs in case I need them in
 order to fix the bug ("tar cf failed-tests.tar tests" should do fine
 for that).  I may need to ask you to send a compressed version of
 this to me.


3.	Installing
 cd work
 make install

==============================================================================

SCCS commands implemented this package are: admin, cdc, delta, get,
prs, prt, sccsdiff, rmdel, sact, unget and what.  Not all options and
capabilities of the commands have been implemented yet, and the comb,
val and vc commands are not provided at all.  Features soon to be
provided but not yet available are the BSD sccs-driver command "sccs",
and a Bourne shell script for converting SCCS files to RCS files (a
csh script exists for this purpose [sccs2rcs.csh] but not everybody
has csh).

Unimplemented features include consistency checking (admin -h),
ignored deltas (delta -g), l-files (get -l), and getting a delta by
sequence number (get -a).  Some features like including and excluding
deltas (get -i -x) have been implemented but not extensively tested.

See the file INSTALL for information on how to compile this package.
Send any questions or bug reports by e-mail to the current maintainer,
<jay@gnu.org>.  After you have compiled CSSC, _PLEASE_ run the test
suite, as described in docs/TESTING, unless you are using GCC or EGCS
under Linux, in which case please don't bother sending success
reports [since I already know that works].

To generate the manual, type "make dvi".  For the PostScript version,
type "cd docs ; make cssc.ps".  If you don't have TeX, you can read
the "info" documentation with either the GNU "info" program, or Emacs.


To regenerate all the machine-generated files from their ultimate
sources (for example, after checking the controlled sources out of a
CVS repository), use
	aclocal && autoheader && automake && autoconf 
followed by the usual invocation of "configure" and "make".


The most helpful thing you could possibly do for this project would be
to contribute a new test case.  It isn't hard; the test scripts are
just shell scripts; instructions on how to do this are provided in the
manual.
